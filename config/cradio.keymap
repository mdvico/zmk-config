/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_F12 {
            timeout-ms = <100>;
            key-positions = <8 9>;
            bindings = <&kp F12>;
            require-prior-idle-ms = <500>;
            layers = <0>;
        };

        combo_reset {
            timeout-ms = <500>;
            key-positions = <3 20 21 22 23 24>;
            bindings = <&sys_reset>;
        };

        combo_bootloader {
            timeout-ms = <2000>;
            key-positions = <0 1 2 3 4 24>;
            bindings = <&bootloader>;
        };

        combo_F11 {
            bindings = <&kp F11>;
            key-positions = <0 1>;
            timeout-ms = <100>;
            layers = <0>;
            require-prior-idle-ms = <500>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_zero {
            bindings = <
&kp Q           &kp W           &kp E               &kp R             &kp T        &kp Y          &kp U              &kp I                &kp O           &kp P
&mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G        &kp H          &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt LEFT_ALT L  &mt RIGHT_GUI SQT
&kp Z           &kp X           &kp C               &kp V             &kp B        &kp N          &kp M              &kp COMMA            &kp DOT         &kp ENTER
                                                    &mt TAB ESC       &kp LCTRL    &mt TAB SPACE  &sl 1
            >;
        };

        layer_one {
            bindings = <
&kp N1   &kp N2     &kp N3   &kp N4     &kp N5    &kp N6  &kp N7     &kp N8    &kp N9    &kp N0
&kp TAB  &none      &kp DQT  &kp PIPE2  &none     &none   &kp EQUAL  &kp LBKT  &kp RBKT  &kp DEL
&none    &kp TILDE  &none    &none      &none     &none   &kp GRAVE  &none     &none     &none
                             &to 0      &trans    &trans  &to 2
            >;
        };

        layer_two {
            bindings = <
&kp EXCL  &kp AT     &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR
&none     &kp QMARK  &kp FSLH  &kp COLON  &kp SEMI     &kp MINUS  &none     &kp LBRC         &kp RBRC  &kp BSPC
&none     &none      &none     &none      &kp BSLH     &kp UNDER  &kp LEFT  &kp DOWN         &kp UP    &kp RIGHT
                               &to 2      &trans       &trans     &to 3
            >;
        };

        layer_three {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4     &kp F5             &kp F6      &kp F7        &kp F8        &kp F9          &kp F10
&none   &none   &none   &none      &none              &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREVIOUS  &kp C_NEXT
&none   &none   &none   &none      &kp PRINTSCREEN    &kp INS     &kp HOME      &kp PG_DN     &kp PG_UP       &kp END
                        &lt 4 ESC  &trans             &trans      &lt 4 ESC
            >;
        };

        layer_four {
            bindings = <
&none       &none       &none       &none  &none    &none  &none  &none  &none  &none
&bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &none  &none    &none  &none  &none  &none  &none
&none       &none       &none       &none  &none    &none  &none  &none  &none  &none
                                    &to 0  &to 0    &to 0  &to 0
            >;
        };
    };
};
